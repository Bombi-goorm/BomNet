plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.2'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.bombi'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// aop
	implementation 'org.springframework.boot:spring-boot-starter-aop'

	// Logging
	implementation 'org.springframework.boot:spring-boot-starter-logging'

	// logback - Janino
	implementation 'org.codehaus.janino:janino:3.1.9' // 최신 버전 확인 후 업데이트

	// AWS
	implementation 'software.amazon.awssdk:s3:2.20.50' // AWS SDK S3
	implementation 'software.amazon.awssdk:auth:2.20.50' // AWS 인증

	// Redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// Cache
	implementation 'org.springframework.boot:spring-boot-starter-cache'

	// MariaDB
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	implementation 'org.mariadb.jdbc:mariadb-java-client:3.1.2'

	// Monitoring
	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	//Querydsl
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	//Serialize
	implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.15.0'

	//bigquery
	implementation 'com.google.cloud:google-cloud-bigquery:2.28.0'

	implementation 'com.google.cloud:google-cloud-storage:2.28.0'

	// JWT
	compileOnly group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'

	//User-Agent Header parser
	implementation("com.github.ua-parser:uap-java:1.6.1")

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	implementation 'com.h2database:h2'
	testRuntimeOnly 'com.h2database:h2'

}

tasks.named('test') {
	useJUnitPlatform()
}

clean {
	delete file('src/main/generated')
}